/*
 * @author Taha BEN SALAH <taha.bensalah@gmail.com>
 */
package net.vpc.upa.expressions;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

public class GroupCriteria implements Serializable, Cloneable {
    private List<Expression> fields = new ArrayList<Expression>(1);

    public GroupCriteria() {
    }

    public GroupCriteria addGroup(GroupCriteria order) {
        fields.addAll(order.fields);
        return this;
    }

    public GroupCriteria addGroup(Expression field) {
        fields.add(field);
        return this;
    }

    public GroupCriteria removeGroup(Expression field) {
        int i = fields.indexOf(field);
        if (i >= 0) {
            fields.remove(i);
        }
        return this;
    }

    public GroupCriteria removeGroup(int index) {
        fields.remove(index);
        return this;
    }

    public GroupCriteria insertGroup(int index, Expression field) {
        fields.add(index, field);
        return this;
    }

    public int indexOf(Expression field) {
        return fields.indexOf(field);
    }

    public void setGroupAt(int index, Expression expression) {
        fields.set(index, expression);
    }

    public Expression getGroupAt(int index) {
        return (Expression) fields.get(index);
    }

    public int size() {
        return fields.size();
    }

    public GroupCriteria clear() {
        fields.clear();
        return this;
    }

    public GroupCriteria noGroup() {
        fields.clear();
        return this;
    }

    public GroupCriteria copy() {
        GroupCriteria o = new GroupCriteria();
        for (Expression field : fields) {
            o.fields.add(field.copy());
        }
        return o;
    }

//    public String toSQL(PersistenceUnit database){
//        int max=fields.size();
//        if(max==0) return "";
//        StringBuffer sb=new StringBuffer("GROUP BY ");
//        for (int i = 0; i < max; i++) {
//            if (i > 0)
//                sb.append(", ");
//            sb.append(((Expression) fields.get(i)).toSQL(database));
//        }
//        return sb.toString();
//    }
}
