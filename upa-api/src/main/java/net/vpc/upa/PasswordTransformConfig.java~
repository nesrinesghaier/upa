/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.vpc.upa;

import java.io.Serializable;
import net.vpc.upa.types.DataTypeTransformConfig;

/**
 *
 * @author vpc
 */
public class PasswordTransformConfig implements DataTypeTransformConfig, Serializable {

    public static final Object NO_VALUE = new Object();
    private Object cipherValue;
    private Object cipherStrategy;

    public Object getCipherValue() {
        return cipherValue;
    }

    public void setCipherValue(Object cipherValue) {
        this.cipherValue = cipherValue;
    }

    public Object getCipherStrategy() {
        return cipherStrategy;
    }

    public void setCipherStrategy(String cipherStrategy) {
        this.setObjectCipherStrategy(cipherStrategy);
    }

    public void setCipherStrategy(Class cipherStrategy) {
        this.setObjectCipherStrategy(cipherStrategy);
    }

    public void setCipherStrategy(PasswordStrategy cipherStrategy) {
        this.setObjectCipherStrategy(cipherStrategy);
    }

    public void setCipherStrategy(PasswordStrategyType cipherStrategy) {
        this.setObjectCipherStrategy(cipherStrategy);
    }

    protected void setObjectCipherStrategy(Object cipherStrategy) {
        if (cipherStrategy == null) {
            throw new NullPointerException();
        }
        if (!(cipherStrategy instanceof String || cipherStrategy instanceof Class || cipherStrategy instanceof PasswordStrategy || (cipherStrategy instanceof PasswordStrategyType && !cipherStrategy.equals(PasswordStrategyType.CUSTOM)))) {
            throw new IllegalArgumentException("cipherStrategy shoud be of type String (as CipherStrategy class name), Class (CipherStrategy implementing class), CipherStrategy (instance), or CipherStrategyType (any balue but custom)");
        }
        this.cipherStrategy = cipherStrategy;
    }
}
