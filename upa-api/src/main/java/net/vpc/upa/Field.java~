package net.vpc.upa;

import net.vpc.upa.types.DataTypeTransform;
import net.vpc.upa.exceptions.UPAException;
import net.vpc.upa.filters.FieldFilter;
import net.vpc.upa.types.DataType;

import java.util.List;

/**
 * @author Taha BEN SALAH <taha.bensalah@gmail.com>
 */
public interface Field extends EntityPart {

    public void setPropertyAccessType(PropertyAccessType value);

    public PropertyAccessType getPropertyAccessType();

    public void setUnspecifiedValue(Object o);

    public Object getUnspecifiedValue();

    /**
     * should return a valid value of UnspecifiedValue. Actually, if
     * getUnspecifiedValue() returns UnspecifiedValue.DEFAULT. this method would
     * return type's default value.
     *
     * @return
     */
    public Object getUnspecifiedValueDecoded();

    public boolean isUnspecifiedValue(Object value);

    public void setDefaultObject(Object o);

    public Object getDefaultValue();

    public Object getDefaultObject();

    public List<Relationship> getRelationships();

    public void setFormula(String formula);

    public void setFormula(Formula formula);

    public void setInsertFormula(String formula);

    public void setInsertFormula(Formula formula);

    public Formula getInsertFormula();

    public int getInsertFormulaOrder();

    public void setFormulaOrder(int order);

    public void setInsertFormulaOrder(int order);

    public Formula getUpdateFormula();

    public int getUpdateFormulaOrder();

    public void setUpdateFormula(String formula);

    public void setUpdateFormula(Formula formula);

    public void setUpdateFormulaOrder(int order);

    public Formula getSelectFormula();

    public void setSelectFormula(String formula);

    public void setSelectFormula(Formula formula);

    //    public boolean isRequired() throws UPAException;
    public DataType getDataType();

    public AccessLevel getInsertAccessLevel();

    public AccessLevel getUpdateAccessLevel();

    public AccessLevel getSelectAccessLevel();

    public void setInsertAccessLevel(AccessLevel accessLevel);

    public void setUpdateAccessLevel(AccessLevel accessLevel);

    public void setSelectAccessLevel(AccessLevel accessLevel);

    public void setAccessLevel(AccessLevel accessLevel);

    public FlagSet<FieldModifier> getUserModifiers();

    public void setUserModifiers(FlagSet<FieldModifier> modifiers);

    public FlagSet<FieldModifier> getUserExcludeModifiers();

    public void setUserExcludeModifiers(FlagSet<FieldModifier> modifiers);

    public FlagSet<EffectiveFieldModifier> getEffectiveModifiers();

    public void setEffectiveModifiers(FlagSet<EffectiveFieldModifier> modifiers);

    public boolean isId() throws UPAException;

    public boolean is(FieldFilter ff) throws UPAException;

    //    public boolean is(long modifier);
    void setDataType(DataType datatype);

    /**
     * check is this is target or source!!!
     *
     * @param r
     */
    public void addTargetRelationship(Relationship r);

    public Relationship[] getTargetRelationships();

    public SearchOperator getSearchOperator();

    public void setSearchOperator(SearchOperator operator);

    public void setTypeTransform(DataTypeTransform transform);

    public DataTypeTransform getTypeTransform();

}
