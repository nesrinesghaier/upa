package net.vpc.upa.types;

// Referenced classes of package org.vpc.lib.util:
//            DataType, ConstraintsException
import net.vpc.upa.PortabilityHint;

import java.util.Arrays;
import java.util.List;

@PortabilityHint(target = "C#", name = "partial")
public class EnumType extends SeriesType implements Cloneable {

    private Class enumClass;

    public EnumType(Class enumClass, boolean nullable) {
        super(enumClass.getName(), enumClass, nullable);
        this.enumClass = enumClass;
        setDefaultNonNullValue(getValues().get(0));
    }

    @Override
    public void check(Object value, String name, String description) throws ConstraintsException {
        super.check(value, name, description);
        if (value != null && !enumClass.isInstance(value)) {
            throw new ConstraintsException("InvalidEnum");
        }
    }

    @PortabilityHint(target = "C#", name = "ignore")
    @Override
    public List<Object> getValues() {
        try {
            return Arrays.asList((Object[]) enumClass.getDeclaredMethod("values").invoke(null));
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }

    @Override
    public String toString() {
        return "EnumType{" + enumClass + '}';
    }

    public Object parse(String value) {
        if (value == null || value.trim().isEmpty()) {
            return null;
        }
        return Enum.valueOf(enumClass, value);
    }

}
