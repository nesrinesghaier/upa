/*
 * @author Taha BEN SALAH <taha.bensalah@gmail.com>
 */
package net.vpc.upa.exceptions;

import net.vpc.upa.Entity;
import net.vpc.upa.Field;
import net.vpc.upa.Index;

import java.util.ArrayList;
import java.util.List;

public class InsertRecordDuplicateUniqueFieldsException extends EntityException {

    private List<String> fieldNames;
    private String indexName;
    private String entityName;
    private Object value;

    public InsertRecordDuplicateUniqueFieldsException(Entity entity, Index index, Object value) {
        super(entity, "insert.DuplicateUniqueFields", fieldTitles(index == null ? null : index.getFields()), value);
        if (index != null) {
            this.indexName = index.getName();
            this.entityName = index.getEntity().getName();
            this.fieldNames = new ArrayList<String>();
            for (Field field : index.getFields()) {
                this.fieldNames.add(field.getName());
            }
        }
    }

    public Object getValue() {
        return value;
    }

    public List<String> getFieldNames() {
        return fieldNames;
    }

    public String getIndexName() {
        return indexName;
    }

    public String getEntityName() {
        return entityName;
    }

    private static String fieldTitles(List<Field> fields) {
        StringBuilder sb = new StringBuilder();
        if (fields != null) {
            sb.append(fields.get(0).getTitle());
            for (int i = 1; i < fields.size(); i++) {
                sb.append(", ");
                sb.append(fields.get(i).getTitle());
            }
        }
        return sb.toString();
    }
}
